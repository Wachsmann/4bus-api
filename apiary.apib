FORMAT: 1A
# 4Bus API

# Group Conexão
## Checagem de Autenticação de dispositivo [/]

### GET 
+ Request (application/json)
+ Response 200 (application/json)

        {
            "message": "4Bus",
            "status": "Connected"
        }
## Autenticação de dispositivo [/auth]

### POST

+ Request (application/json)
    + Attributes
        + imei (number)
        + cpf (string)
        + plate (string)
        
+ Response 200 (application/json)        

        {
            "token": <token>,
            "id_driver": <códigoMotorista>
        }
        
# Group Logs

## Log de Início e fim de viagem [/begin-end-trips]

### POST

+ Request Headers

        + Authorization: Bearer <token>,
        + Accept: application/json
    

+ Request (application/json)
    + Attributes
        + log (BeginEndTrip)

+ Response 200 (application/json)
   
## Log de Jornada de Trabalho [/journey]

### POST

+ Request Headers

        + Authorization: Bearer <token>,
        + Accept: application/json
        
+ Request (application/json)
    + Attributes
        + log (Journey)

+ Response 200 (application/json)


## Log de Detecção de parada [/stop-detector]
  
### POST

+ Request Headers

        + Authorization: Bearer <token>,
        + Accept: application/json

+ Request (application/json)
    + Attributes
        + log (StopDetector)

+ Response 200 (application/json)

# Group Checagem


## Checagem de viagens [/check-trips/{imei}/{qtt}]

+ Parameters
    + qtt - Quantidade de viagens atuais e ativas
    + imei - Referente ao dispositivo
    
### GET
+ Response 200 (application/json)
    + Attributes
        + trips (Trip)

# Data Structures

## Trip (object)
+ id (number)
+ id_clients (number)
+ id_vehicles (number)
+ leave (string)
+ arrive (string)
+ status (number)
+ id_first_driver (number)
+ id_second_driver (number)
+ id_city_origin (number)
+ id_city_destiny (number)
+ city_origin_name (string)
+ city_destiny_name (string)
+ origin_abbr (string)
+ destiny_abbr (string)
+ second_driver_name (string)
+ first_driver_name (string)
+ first_driver_avatar (string)
+ second_driver_avatar (string)
+ second_driver_cpf (string)
+ first_driver_cpf (string)
## Base (object)
+ id_trips (number, required) - Código da viagem
+ id_drivers (number, required) - Código do Motorista
+ id_vehicle (number, required) - Código do veículo 
+ lat (number, required) - Latitude 
+ lng (number, required) - Longitude
+ pdop (number, required)
+ dt (string, required) - Data e Hora do Evento 
+ imei (number, required)
## StopDetector (Base)
+ cmp (number, required) - Código de motivo de parada
+ dsc (string, required) - Descrição do motivo de parada

## Journey (Base)
+ tre (number,required) - Tipo do registro de evento
## BeginEndTrip (Base)
+ trv  - Tipo do registro de viagem
+ csl - Código do sentido da linha